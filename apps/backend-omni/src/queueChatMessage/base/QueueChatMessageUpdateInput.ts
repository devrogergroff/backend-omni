/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsInt,
  IsEnum,
} from "class-validator";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { Type } from "class-transformer";
import { QueueChatWhereUniqueInput } from "../../queueChat/base/QueueChatWhereUniqueInput";
import { QueueAnexoUpdateManyWithoutQueueChatMessagesInput } from "./QueueAnexoUpdateManyWithoutQueueChatMessagesInput";
import { EnumQueueChatMessageStatus } from "./EnumQueueChatMessageStatus";

@InputType()
class QueueChatMessageUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  agente?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  dadosAdicionais?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dataHora?: Date | null;

  @ApiProperty({
    required: false,
    type: () => QueueChatWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QueueChatWhereUniqueInput)
  @IsOptional()
  @Field(() => QueueChatWhereUniqueInput, {
    nullable: true,
  })
  idQueueChat?: QueueChatWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  inOut?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  mailMessageId?: number | null;

  @ApiProperty({
    required: false,
    type: () => QueueAnexoUpdateManyWithoutQueueChatMessagesInput,
  })
  @ValidateNested()
  @Type(() => QueueAnexoUpdateManyWithoutQueueChatMessagesInput)
  @IsOptional()
  @Field(() => QueueAnexoUpdateManyWithoutQueueChatMessagesInput, {
    nullable: true,
  })
  queueAnexosMesssage?: QueueAnexoUpdateManyWithoutQueueChatMessagesInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  quotedMsg?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  repliedIdMsg?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumQueueChatMessageStatus,
  })
  @IsEnum(EnumQueueChatMessageStatus)
  @IsOptional()
  @Field(() => EnumQueueChatMessageStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  texto?: string | null;
}

export { QueueChatMessageUpdateInput as QueueChatMessageUpdateInput };
