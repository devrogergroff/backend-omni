/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { JsonFilter } from "../../util/JsonFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { QueueChatWhereUniqueInput } from "../../queueChat/base/QueueChatWhereUniqueInput";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { QueueAnexoListRelationFilter } from "../../queueAnexo/base/QueueAnexoListRelationFilter";
import { EnumQueueChatMessageStatus } from "./EnumQueueChatMessageStatus";

@InputType()
class QueueChatMessageWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  agente?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  dadosAdicionais?: JsonFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dataHora?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => QueueChatWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => QueueChatWhereUniqueInput)
  @IsOptional()
  @Field(() => QueueChatWhereUniqueInput, {
    nullable: true,
  })
  idQueueChat?: QueueChatWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  inOut?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  mailMessageId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => QueueAnexoListRelationFilter,
  })
  @ValidateNested()
  @Type(() => QueueAnexoListRelationFilter)
  @IsOptional()
  @Field(() => QueueAnexoListRelationFilter, {
    nullable: true,
  })
  queueAnexosMesssage?: QueueAnexoListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  quotedMsg?: JsonFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  repliedIdMsg?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumQueueChatMessageStatus,
  })
  @IsEnum(EnumQueueChatMessageStatus)
  @IsOptional()
  @Field(() => EnumQueueChatMessageStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  texto?: StringNullableFilter;
}

export { QueueChatMessageWhereInput as QueueChatMessageWhereInput };
